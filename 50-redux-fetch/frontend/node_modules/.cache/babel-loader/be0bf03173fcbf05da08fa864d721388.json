{"ast":null,"code":"var _jsxFileName = \"/Users/hyeokjung.kim/Flatiron-LI/012720/48-react-redux/src/components/ChipContainer.js\";\nimport React from 'react';\nimport Chip from './Chip';\nimport { connect } from 'react-redux';\n\nconst ChipContainer = props => {\n  console.log(\"PROPS OF CONTAINER\", props);\n  let arrayOfComponents = props.chips.map(chipObj => {\n    return /*#__PURE__*/React.createElement(Chip, {\n      key: chipObj.name,\n      chip: chipObj,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 12\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Chip Container\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }));\n}; // the return value of mapStateToProps is an object that will be merged into ChipContainer's props\n\n\nlet mapStateToProps = reduxState => {\n  return {\n    chips: reduxState.chips\n  };\n}; // first argument of connect is mapStateToProps\n// mapStateToProps is a function that will take in reduxState and make them the props\n\n\nlet funcName = connect(mapStateToProps);\nlet magicalComponent = funcName(ChipContainer);\nexport default magicalComponent; // export default connect(mapStateToProps)(ChipContainer)","map":{"version":3,"sources":["/Users/hyeokjung.kim/Flatiron-LI/012720/48-react-redux/src/components/ChipContainer.js"],"names":["React","Chip","connect","ChipContainer","props","console","log","arrayOfComponents","chips","map","chipObj","name","mapStateToProps","reduxState","funcName","magicalComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;;AAGA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,KAAlC;AAGA,MAAIG,iBAAiB,GAAGH,KAAK,CAACI,KAAN,CAAYC,GAAZ,CAAiBC,OAAD,IAAa;AACnD,wBAAO,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,OAAO,CAACC,IAAnB;AAAyB,MAAA,IAAI,EAAED,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFuB,CAAxB;AAGA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAQD,CAfD,C,CAmBA;;;AACA,IAAIE,eAAe,GAAIC,UAAD,IAAgB;AACpC,SAAO;AACLL,IAAAA,KAAK,EAAEK,UAAU,CAACL;AADb,GAAP;AAGD,CAJD,C,CAQA;AACE;;;AACF,IAAIM,QAAQ,GAAGZ,OAAO,CAACU,eAAD,CAAtB;AACA,IAAIG,gBAAgB,GAAGD,QAAQ,CAACX,aAAD,CAA/B;AACA,eAAeY,gBAAf,C,CAEA","sourcesContent":["import React from 'react';\nimport Chip from './Chip'\n\nimport {connect} from 'react-redux'\n\n\nconst ChipContainer = (props) => {\n  console.log(\"PROPS OF CONTAINER\", props )\n\n\n  let arrayOfComponents = props.chips.map((chipObj) => {\n    return <Chip key={chipObj.name} chip={chipObj} />\n  })\n  return (\n    <>\n      <h2>Chip Container</h2>\n      <ul>\n        {/* Show some chips here */}\n      </ul>\n    </>\n  )\n};\n\n\n\n// the return value of mapStateToProps is an object that will be merged into ChipContainer's props\nlet mapStateToProps = (reduxState) => {\n  return {\n    chips: reduxState.chips\n  }\n}\n\n\n\n// first argument of connect is mapStateToProps\n  // mapStateToProps is a function that will take in reduxState and make them the props\nlet funcName = connect(mapStateToProps)\nlet magicalComponent = funcName(ChipContainer)\nexport default magicalComponent;\n\n// export default connect(mapStateToProps)(ChipContainer)\n"]},"metadata":{},"sourceType":"module"}