{"ast":null,"code":"var _jsxFileName = \"/Users/hyeokjung.kim/Flatiron-LI/012720/48-react-redux/src/components/ChipForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass ChipForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      brand: \"\"\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    let {\n      name,\n      brand\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 8\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      autoComplete: \"off\",\n      value: name,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"brand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 8\n      }\n    }, \"Brand\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"brand\",\n      name: \"brand\",\n      value: brand,\n      autoComplete: \"off\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 8\n      }\n    }));\n  }\n\n} // first argument of connect is mapStateToProps\n// mapStateToProps is a function that will take in reduxState and make them the props (Getting Information)\n// second argument of connect is mapDispatchToProps\n// mapDispatchToProps is a POJO that takes in values of function definitions (Sending information)\n// each function definition will correspond to an action\n// mapDispatchToProps as a POJO will get merged into props\n\n\nlet addOneChip = newChipObject => {\n  let theAction = {\n    type: \"ADD_ONE_CHIP\",\n    payload: newChipObject\n  };\n  return theAction;\n};\n\nlet mapDispatchToProps = {\n  addOneChip: addOneChip\n};\nexport default connect(null, mapDispatchToProps)(ChipForm); //","map":{"version":3,"sources":["/Users/hyeokjung.kim/Flatiron-LI/012720/48-react-redux/src/components/ChipForm.js"],"names":["React","Component","connect","ChipForm","state","name","brand","handleChange","e","setState","target","value","handleSubmit","preventDefault","render","addOneChip","newChipObject","theAction","type","payload","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE/BG,KAF+B,GAEzB;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,KAAK,EAAE;AAFH,KAFyB;;AAAA,SAO/BC,YAP+B,GAOfC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AACZ,SAACD,CAAC,CAACE,MAAF,CAASL,IAAV,GAAiBG,CAAC,CAACE,MAAF,CAASC;AADd,OAAd;AAGD,KAX8B;;AAAA,SAahCC,YAbgC,GAahBJ,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACK,cAAF;AACD,KAf+B;AAAA;;AAiBhCC,EAAAA,MAAM,GAAG;AACP,QAAI;AAACT,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgB,KAAKF,KAAzB;AACA,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKQ,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAII;AAAO,MAAA,IAAI,EAAC,MAAZ;AACG,MAAA,EAAE,EAAC,MADN;AAEG,MAAA,IAAI,EAAC,MAFR;AAGG,MAAA,YAAY,EAAC,KAHhB;AAIG,MAAA,KAAK,EAAEP,IAJV;AAKG,MAAA,QAAQ,EAAE,KAAKE,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAWE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXF,eAcI;AAAO,MAAA,IAAI,EAAC,MAAZ;AACG,MAAA,EAAE,EAAC,OADN;AAEG,MAAA,IAAI,EAAC,OAFR;AAGG,MAAA,KAAK,EAAED,KAHV;AAIG,MAAA,YAAY,EAAC,KAJhB;AAKG,MAAA,QAAQ,EAAE,KAAKC,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,eAqBE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,CADF;AAyBD;;AA5C+B,C,CAiDjC;AACE;AAEF;AACE;AACI;AACJ;;;AAKF,IAAIQ,UAAU,GAAIC,aAAD,IAAmB;AAElC,MAAIC,SAAS,GAAG;AAAEC,IAAAA,IAAI,EAAE,cAAR;AAAwBC,IAAAA,OAAO,EAAEH;AAAjC,GAAhB;AAEA,SAAOC,SAAP;AACD,CALD;;AAOA,IAAIG,kBAAkB,GAAG;AACvBL,EAAAA,UAAU,EAAEA;AADW,CAAzB;AAIA,eAAeb,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf,C,CAmBA","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux'\n\nclass ChipForm extends Component {\n\n  state={\n    name: \"\",\n    brand: \"\"\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n handleSubmit = (e) => {\n   e.preventDefault()\n }\n\n render() {\n   let {name, brand} = this.state\n   return (\n     <form onSubmit={this.handleSubmit}>\n       <label htmlFor=\"name\">\n         Name\n       </label>\n         <input type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            autoComplete=\"off\"\n            value={name}\n            onChange={this.handleChange}\n        />\n       <label htmlFor=\"brand\">\n         Brand\n       </label>\n         <input type=\"text\"\n            id=\"brand\"\n            name=\"brand\"\n            value={brand}\n            autoComplete=\"off\"\n            onChange={this.handleChange}\n          />\n       <input type=\"submit\"/>\n     </form>\n   );\n }\n\n}\n\n\n// first argument of connect is mapStateToProps\n  // mapStateToProps is a function that will take in reduxState and make them the props (Getting Information)\n\n// second argument of connect is mapDispatchToProps\n  // mapDispatchToProps is a POJO that takes in values of function definitions (Sending information)\n      // each function definition will correspond to an action\n  // mapDispatchToProps as a POJO will get merged into props\n\n\n\n\nlet addOneChip = (newChipObject) => {\n\n  let theAction = { type: \"ADD_ONE_CHIP\", payload: newChipObject }\n\n  return theAction\n}\n\nlet mapDispatchToProps = {\n  addOneChip: addOneChip\n}\n\nexport default connect(null, mapDispatchToProps)(ChipForm);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//\n"]},"metadata":{},"sourceType":"module"}