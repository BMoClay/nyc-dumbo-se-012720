{"ast":null,"code":"var _jsxFileName = \"/Users/hyeokjung.kim/Flatiron-LI/012720/48-react-redux/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport chipsArray from './chips'; // redux dependencies\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nlet initialState = {\n  // Change the key-value pairs here\n  chips: chipsArray\n}; // whatever gets returned from the reducer BECOMES the global state\n\nlet theReducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nlet storeObject = createStore(theReducer);\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: storeObject,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }\n})), document.getElementById('root')); //","map":{"version":3,"sources":["/Users/hyeokjung.kim/Flatiron-LI/012720/48-react-redux/src/index.js"],"names":["React","ReactDOM","App","chipsArray","createStore","Provider","initialState","chips","theReducer","state","action","type","storeObject","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,UAAP,MAAuB,SAAvB,C,CAEA;;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AAGA,IAAIC,YAAY,GAAG;AACjB;AACAC,EAAAA,KAAK,EAAEJ;AAFU,CAAnB,C,CAWA;;AACA,IAAIK,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAEjD,UAAQA,MAAM,CAACC,IAAf;AAEE;AACE,aAAOF,KAAP;AAHJ;AAMD,CARD;;AAkBA,IAAIG,WAAW,GAAGR,WAAW,CAACI,UAAD,CAA7B;AASAP,QAAQ,CAACY,MAAT,eACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADJ,EAIEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAsCA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport chipsArray from './chips'\n\n// redux dependencies\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\n\n\nlet initialState = {\n  // Change the key-value pairs here\n  chips: chipsArray,\n}\n\n\n\n\n\n\n\n// whatever gets returned from the reducer BECOMES the global state\nlet theReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n\n    default:\n      return state\n  }\n\n}\n\n\n\n\n\n\n\n\n\nlet storeObject = createStore(theReducer)\n\n\n\n\n\n\n\n\nReactDOM.render(\n    <Provider store={storeObject}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//\n"]},"metadata":{},"sourceType":"module"}