{"ast":null,"code":"var _jsxFileName = \"/Users/hyeokjung.kim/Flatiron-LI/012720/50-redux-fetch/frontend/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport ChipContainer from './components/ChipContainer';\nimport ChipForm from './components/ChipForm';\nimport Form from './components/Form';\nimport { connect } from 'react-redux';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLoginSubmit = userInfo => {\n      console.log(\"Login form has been submitted\");\n      fetch(\"http://localhost:4000/login\", {\n        method: \"POST\",\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(userInfo)\n      }).then(r => r.json()).then(this.handleResponse);\n    };\n\n    this.handleRegisterSubmit = userInfo => {\n      console.log(\"Register form has been submitted\");\n      fetch(\"http://localhost:4000/users\", {\n        method: \"POST\",\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(userInfo)\n      }).then(r => r.json()).then(this.handleResponse);\n    };\n\n    this.handleResponse = () => {};\n\n    this.renderForm = routerProps => {\n      if (routerProps.location.pathname === \"/login\") {\n        return /*#__PURE__*/React.createElement(Form, {\n          formName: \"Login Form\",\n          handleSubmit: this.handleLoginSubmit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 14\n          }\n        });\n      } else if (routerProps.location.pathname === \"/register\") {\n        return /*#__PURE__*/React.createElement(Form, {\n          formName: \"Register Form\",\n          handleSubmit: this.handleRegisterSubmit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 14\n          }\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:4000/chips\").then(r => r.json()).then(arrayOfChips => {\n      this.props.setAllChips(arrayOfChips);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"Welcome to the Redux Store\"), /*#__PURE__*/React.createElement(ChipForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ChipContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nlet setAllChips = chipsArr => {\n  return {\n    type: \"SET_ALL_CHIPS\",\n    payload: chipsArr\n  };\n};\n\nlet sendThisInformation = {\n  setAllChips\n};\nexport default connect(null, sendThisInformation)(App);","map":{"version":3,"sources":["/Users/hyeokjung.kim/Flatiron-LI/012720/50-redux-fetch/frontend/src/App.js"],"names":["React","ChipContainer","ChipForm","Form","connect","App","Component","handleLoginSubmit","userInfo","console","log","fetch","method","headers","body","JSON","stringify","then","r","json","handleResponse","handleRegisterSubmit","renderForm","routerProps","location","pathname","componentDidMount","arrayOfChips","props","setAllChips","render","chipsArr","type","payload","sendThisInformation"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ChipContainer from './components/ChipContainer'\nimport ChipForm from './components/ChipForm'\nimport Form from './components/Form'\n\nimport {connect} from 'react-redux'\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    fetch(\"http://localhost:4000/chips\")\n    .then(r => r.json())\n    .then((arrayOfChips) => {\n      this.props.setAllChips(arrayOfChips);\n    })\n  }\n\n  handleLoginSubmit = (userInfo) => {\n    console.log(\"Login form has been submitted\")\n\n    fetch(\"http://localhost:4000/login\", {\n      method: \"POST\",\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(userInfo)\n    })\n      .then(r => r.json())\n      .then(this.handleResponse)\n  }\n\n\n  handleRegisterSubmit = (userInfo) => {\n    console.log(\"Register form has been submitted\")\n\n    fetch(\"http://localhost:4000/users\", {\n      method: \"POST\",\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(userInfo)\n    })\n      .then(r => r.json())\n      .then(this.handleResponse)\n  }\n\n\n  handleResponse = () => {\n\n  }\n\n\n  renderForm = (routerProps) => {\n    if(routerProps.location.pathname === \"/login\"){\n      return <Form formName=\"Login Form\" handleSubmit={this.handleLoginSubmit}/>\n    } else if (routerProps.location.pathname === \"/register\") {\n      return <Form formName=\"Register Form\" handleSubmit={this.handleRegisterSubmit}/>\n    }\n  }\n\n\n  render(){\n    return (\n      <div className=\"App\">\n        <h1>Welcome to the Redux Store</h1>\n        <ChipForm />\n        <ChipContainer />\n      </div>\n    );\n  }\n\n}\n\nlet setAllChips = (chipsArr) => {\n  return {\n    type: \"SET_ALL_CHIPS\",\n    payload: chipsArr\n  }\n}\n\n\nlet sendThisInformation = { setAllChips }\n\n\nexport default connect(null, sendThisInformation)(App);\n"]},"metadata":{},"sourceType":"module"}