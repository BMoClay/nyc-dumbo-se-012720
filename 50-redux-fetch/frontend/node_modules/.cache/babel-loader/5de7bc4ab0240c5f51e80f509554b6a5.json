{"ast":null,"code":"var _jsxFileName = \"/Users/hyeokjung.kim/Flatiron-LI/012720/46-predux/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'; // redux dependencies\n\nimport { createStore } from 'redux';\nlet initialState = {\n  // Change the key-value pairs here\n  hello: \"this is inside the state\",\n  chips: [],\n  number: 0\n}; // whatever gets returned from the reducer BECOMES the global state\n\nlet theReducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nlet storeObject = createStore(theReducer);\nlet globalState = storeObject.getState();\nconsole.log(\"BEFORE WE DO ANYTHING:\", globalState.number);\nlet theActionToIncreaseBy3 = {\n  type: \"ADD_NUMBER\",\n  payload: 3\n};\nstoreObject.dispatch(theActionToIncreaseBy3);\nconsole.log(\"AFTER WE DO THAT\");\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/hyeokjung.kim/Flatiron-LI/012720/46-predux/src/index.js"],"names":["React","ReactDOM","App","createStore","initialState","hello","chips","number","theReducer","state","action","type","storeObject","globalState","getState","console","log","theActionToIncreaseBy3","payload","dispatch","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CAGA;;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,IAAIC,YAAY,GAAG;AACjB;AACAC,EAAAA,KAAK,EAAE,0BAFU;AAGjBC,EAAAA,KAAK,EAAE,EAHU;AAIjBC,EAAAA,MAAM,EAAE;AAJS,CAAnB,C,CAQA;;AACA,IAAIC,UAAU,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAEjD,UAAQA,MAAM,CAACC,IAAf;AACE;AACE,aAAOF,KAAP;AAFJ;AAKD,CAPD;;AASA,IAAIG,WAAW,GAAGT,WAAW,CAACK,UAAD,CAA7B;AACA,IAAIK,WAAW,GAAGD,WAAW,CAACE,QAAZ,EAAlB;AAEAC,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCH,WAAW,CAACN,MAAlD;AAEA,IAAIU,sBAAsB,GAAG;AAC3BN,EAAAA,IAAI,EAAE,YADqB;AAE3BO,EAAAA,OAAO,EAAE;AAFkB,CAA7B;AAKAN,WAAW,CAACO,QAAZ,CAAqBF,sBAArB;AAEAF,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAOAf,QAAQ,CAACmB,MAAT,eACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n// redux dependencies\nimport { createStore } from 'redux'\n\nlet initialState = {\n  // Change the key-value pairs here\n  hello: \"this is inside the state\",\n  chips: [],\n  number: 0\n}\n\n\n// whatever gets returned from the reducer BECOMES the global state\nlet theReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    default:\n      return state\n  }\n\n}\n\nlet storeObject = createStore(theReducer)\nlet globalState = storeObject.getState()\n\nconsole.log(\"BEFORE WE DO ANYTHING:\", globalState.number);\n\nlet theActionToIncreaseBy3 = {\n  type: \"ADD_NUMBER\",\n  payload: 3\n}\n\nstoreObject.dispatch(theActionToIncreaseBy3)\n\nconsole.log(\"AFTER WE DO THAT\");\n\n\n\n\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}